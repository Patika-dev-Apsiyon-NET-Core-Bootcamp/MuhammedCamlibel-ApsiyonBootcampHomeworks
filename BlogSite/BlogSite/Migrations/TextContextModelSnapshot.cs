// <auto-generated />
using System;
using BlogSite.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogSite.Migrations
{
    [DbContext(typeof(TextContext))]
    partial class TextContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogSite.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("BlogSite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthdayYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlogSite.Models.Yazi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("YaziMetni")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Yazilar");
                });

            modelBuilder.Entity("BlogSite.Models.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("YaziId")
                        .HasColumnType("int");

                    b.Property<string>("YorumMetni")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("YaziId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("KategoriYazi", b =>
                {
                    b.Property<int>("KategorilerId")
                        .HasColumnType("int");

                    b.Property<int>("YazilarId")
                        .HasColumnType("int");

                    b.HasKey("KategorilerId", "YazilarId");

                    b.HasIndex("YazilarId");

                    b.ToTable("KategoriYazi");
                });

            modelBuilder.Entity("BlogSite.Models.Yazi", b =>
                {
                    b.HasOne("BlogSite.Models.User", "User")
                        .WithMany("Yazilar")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlogSite.Models.Yorum", b =>
                {
                    b.HasOne("BlogSite.Models.User", "User")
                        .WithMany("Yorumlar")
                        .HasForeignKey("UserId");

                    b.HasOne("BlogSite.Models.Yazi", "Yazi")
                        .WithMany("Yorumlar")
                        .HasForeignKey("YaziId");

                    b.Navigation("User");

                    b.Navigation("Yazi");
                });

            modelBuilder.Entity("KategoriYazi", b =>
                {
                    b.HasOne("BlogSite.Models.Kategori", null)
                        .WithMany()
                        .HasForeignKey("KategorilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogSite.Models.Yazi", null)
                        .WithMany()
                        .HasForeignKey("YazilarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlogSite.Models.User", b =>
                {
                    b.Navigation("Yazilar");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("BlogSite.Models.Yazi", b =>
                {
                    b.Navigation("Yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
